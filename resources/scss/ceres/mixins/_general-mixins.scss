/// Element group with fixed aspect ration 1x1
///
/// @author Bruno Fenzl
///
/// @example scss - Basic Usage HTML
///     <div class="square-container">
///         <div class="square-inner">
///             Content here
///         </div>
///     </div>
///
@mixin square-container(){
    position: relative;
    display: block;
    width: 100%;
    height: 0;
    padding-bottom: 100%;
    overflow: hidden;

    .square-inner{
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
    }
}

.square-container{
    @include square-container()
}

/// Class for centering direct single child.
///
/// @author Bruno Fenzl
///
/// @example scss - Basic Usage HTML
///     <div class="center-xy">
///         content to be centered
///     </div>
@mixin center-xy(){
    display: flex;
    flex-flow: row nowrap;
    justify-content: center; // center on the x axys

    img{
        align-self: center; // center on the y axys
    }
}

.center-xy{
    @include center-xy();
}

/// mimics the image-background: cover; behaviour but with img element
///
/// @author Bruno Fenzl
///
/// @example scss - Basic Usage HTML
///     <div class="img-cover-container">
///         img class="" src="">
///     </div>
@mixin img-cover{
    position: relative;
    overflow: hidden;

    &>img{
        position: absolute;
        top: -9999px;
        right: -9999px;
        bottom: -9999px;
        left: -9999px;
        margin: auto;
        min-width: 100%;
        min-height: 100%;
    }
}


/// mimics the image-background: contain; behaviour but with img element
///
/// @author Bruno Fenzl
///
/// @example scss - Basic Usage HTML
///     <div class="img-contain-container">
///         img src="">
///     </div>

@mixin img-contain{
    position: relative;
    overflow: hidden;

    &>noscript,a>img{
        position: absolute;
        top: -9999px;
        right: -9999px;
        bottom: -9999px;
        left: -9999px;
        margin: auto;
        max-width: 100%;
        max-height: 100%;
        width: auto;
        height: auto;
    }

    & .owl-carousel {
        height: 100%;

        & .owl-stage-outer {
            height: 100%;

            & .owl-stage {
                height: 100%;

                & .owl-item {
                    height: 100%;

                    & img{
                        position: absolute;
                        top: -9999px;
                        right: -9999px;
                        bottom: -9999px;
                        left: -9999px;
                        margin: auto;
                        max-width: 100%;
                        max-height: 100%;
                        width: auto;
                        height: auto;
                    }
                }
            }
        }
    }

}

@mixin pipe($color:$gray-light){
    height: 1em;
    border-left: 1px solid $color;
    margin: 0 .45em 0 .25em;
}

.pipe{
    @include pipe();
}

@mixin reset-list(){
    list-style: none;
    margin: 0;
    padding: 0;
}

@mixin context-bg($color)
{
    background-color: $color;
    color: color-yiq($color);
}
